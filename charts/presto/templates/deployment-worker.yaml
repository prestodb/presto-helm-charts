{{- $podAnnotations := mergeOverwrite (deepCopy .Values.podAnnotations) .Values.worker.podAnnotations }}
{{- $env := concat .Values.env .Values.worker.env }}
{{- $envFrom := concat .Values.envFrom .Values.worker.envFrom }}
{{- $volumes := concat .Values.volumes .Values.worker.volumes }}
{{- $volumeMounts := concat .Values.volumeMounts .Values.worker.volumeMounts }}
{{- $containers := concat .Values.containers .Values.worker.containers }}
{{- $initContainers := concat .Values.initContainers .Values.worker.initContainers }}
{{- $nodeSelector := or .Values.worker.nodeSelector .Values.nodeSelector }}
{{- $affinity := or .Values.worker.affinity .Values.affinity }}
{{- $tolerations := or .Values.worker.tolerations .Values.tolerations }}
{{- $securityContext := or .Values.worker.securityContext .Values.securityContext }}
{{- if or (eq .Values.mode "cluster") (eq .Values.mode "ha-cluster") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-worker
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: worker
    app.kubernetes.io/version: {{ .Values.image.tag | default .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: worker
  strategy: {{- toYaml .Values.worker.deployment.strategy | nindent 4 }}
  revisionHistoryLimit: {{ toYaml .Values.worker.deployment.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: worker
      annotations:
        checksum/catalog: {{ include (print $.Template.BasePath "/configmap-catalog.yaml") . | sha256sum }}
        checksum/worker: {{ include (print $.Template.BasePath "/configmap-worker.yaml") . | sha256sum }}
        {{- with $podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.serviceAccount.create .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name | default .Release.Name }}
      {{- end }}
      {{- with $initContainers }}
      initContainers: {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      containers:
        - name: worker
          image: "{{ if .Values.prestoCpp.enabled }}{{ .Values.prestoCpp.image.repository }}:{{ .Values.prestoCpp.image.tag | default .Chart.AppVersion }}{{ else }}{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}{{ end }}"
          imagePullPolicy: {{ if .Values.prestoCpp.enabled }}{{ .Values.prestoCpp.image.pullPolicy }}{{ else }}{{ .Values.image.pullPolicy }}{{ end }}
          {{- with .Values.worker.command }}
          command: {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- with .Values.worker.args }}
          args: {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- with $env }}
          env: {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- with $envFrom }}
          envFrom: {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: {{ .Values.worker.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.worker.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.worker.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.worker.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.worker.livenessProbe.successThreshold }}
          readinessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: {{ .Values.worker.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.worker.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.worker.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.worker.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.worker.readinessProbe.successThreshold }}
          {{- with .Values.worker.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.home }}/etc
              name: config
            - mountPath: {{ .Values.home }}/etc/catalog
              name: catalog
            {{- with $volumeMounts }}
              {{- tpl (toYaml .) $ | nindent 12 }}
            {{- end }}
        {{- with $containers }}
          {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-worker
        - name: catalog
          configMap:
            name: {{ .Release.Name }}-catalog
        {{- with $volumes }}
          {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
      {{- with $nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
